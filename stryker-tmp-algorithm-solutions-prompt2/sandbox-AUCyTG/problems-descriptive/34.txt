There is an array a
 consisting of n
 non-negative integers and a magic number k
 (k≥1
, k
 is an integer). Serval has constructed another array b
 of length n
, where bi=aimodk
 holds∗
 for all 1≤i≤n
. Then, he shuffled b
.

You are given the two arrays a
 and b
. Find a possible magic number k
. However, there is a small possibility that Serval fooled you, and such an integer does not exist. In this case, output −1
.

It can be shown that, under the constraints of the problem, if such an integer k
 exists, then there exists a valid answer no more than 109
. And you need to guarantee that k≤109
 in your output.

∗
aimodk
 denotes the remainder from dividing ai
 by k
.

Input

The first line of each test case contains an integer n
 (1≤n≤104
) — the length of the array a
.

The second line contains n
 integers a1,a2,…,an
 (0≤ai≤106
) — the elements of the array a
.

The third line contains n
 integers b1,b2,…,bn
 (0≤bi≤10^6) — the elements of the array b.

It is guaranteed that the sum of n
 over all test cases does not exceed 104
.

Output
For each test case, output a single integer k
 (1≤k≤10^9) — the magic number you found. Print −1
 if it is impossible to find such an integer.

If there are multiple answers, you may print any of them.