You are given an array a1,a2,…,an
. Also, you are given three variables P,Q,R
, initially equal to zero.

You need to process all the numbers a1,a2,…,an
, in the order from 1
 to n
. When processing the next ai
, you must perform exactly one of the three actions of your choice:

P:=P⊕ai
Q:=Q⊕ai
R:=R⊕ai
⊕
 denotes the bitwise XOR operation.

When performing actions, you must follow the main rule: it is necessary that after each action, all three numbers P,Q,R
 are not pairwise distinct.

There are a total of 3n
 ways to perform all n
 actions. How many of them do not violate the main rule? Since the answer can be quite large, find it modulo 109+7
.

Input

The first line of each test case contains an integer n
 (1≤n≤2⋅10^5
) — the length of the array a
.

The second line of each test case contains n
 integers a1,a2,…,an
 (1≤ai≤10^9
) — the elements of the array a
.

It is guaranteed that the sum of the values of n
 for all test cases does not exceed 2⋅10^5
.

Output
For each test case, output the number of ways to perform all n
 actions without violating the main rule, modulo 109+7
.