You are the proud owner of an infinitely large grid of lightbulbs, represented by a Cartesian coordinate system. Initially, all of the lightbulbs are turned off, except for one lightbulb, where you buried your proudest treasure.

In order to hide your treasure's position, you perform the following operation an arbitrary number of times (possibly zero):

Choose two integer numbers x
 and y
, and switch the state of the 4
 lightbulbs at (x,y)
, (x,y+1)
, (x+1,y−1)
, and (x+1,y)
. In other words, for each lightbulb, turn it on if it was off, and turn it off if it was on. Note that there are no constraints on x
 and y
.
In the end, there are n
 lightbulbs turned on at coordinates (x1,y1),(x2,y2),…,(xn,yn)
. Unfortunately, you have already forgotten where you buried your treasure, so now you have to figure out one possible position of the treasure. Good luck!

Input

The first line of each test case contains a single integer n
 (1≤n≤2⋅10^5
) — the number of lightbulbs that are on.

The i
-th of the next n
 lines contains two integers xi
 and yi
 (−10^8≤xi,yi≤10^8
) — the coordinates of the i
-th lightbulb. It is guaranteed that all coordinates are distinct.

Additional constraint: There exists at least one position (s,t)
 (−10^9≤s,t≤10^9
), such that if the lightbulb at position (s,t)
 is initially turned on, then after performing an arbitrary number of operations (possibly zero), we will get the given configuration of lightbulbs.

It is guaranteed that the sum of n
 over all test cases does not exceed 2⋅10^5
.

Output
For each test case, output two integers s
 and t
 (−10^9≤s,t≤10^9
) — one possible position of the buried treasure. If there are multiple solutions, print any of them.