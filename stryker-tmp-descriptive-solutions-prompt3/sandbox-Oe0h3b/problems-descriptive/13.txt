An array b
 of m
 integers is called good if, when it is sorted, b⌊(m+1)/2⌋=b⌈(m+1)/2⌉
. In other words, b
 is good if both of its medians are equal. In particular, ⌊(m+1)/2⌋=⌈(m+1)/2⌉
 when m
 is odd, so b
 is guaranteed to be good if it has an odd length.

You are given an array a
 of n
 integers. Calculate the number of good subarrays∗
 in a
.

∗
An array x
 is a subarray of an array y
 if x
 can be obtained from y
 by the deletion of several (possibly, zero or all) elements from the beginning and several (possibly, zero or all) elements from the end.

Input

The first line of each test case contains a single integer n
 (1≤n≤10^5
) — the length of the array.

The second line of each test case contains n
 integers a1,a2,…,an
 (1≤ai≤10) — the given array.

It is guaranteed that the sum of n
 over all test cases does not exceed 10^5
.

Output
For each test case, output a single integer representing the number of good subarrays in a
