A quadtree is a tree data structure in which each node has at most four children and accounts for a square-shaped region.

Formally, for all tuples of nonnegative integers k,a,b≥0
, there exists exactly one node accounting for the following region∗
.

[a⋅2^k,(a+1)⋅2^k]×[b⋅2^k,(b+1)⋅2^k]

All nodes whose region is larger than 1×1
 contain four children corresponding to the regions divided equally into four, and the nodes whose region is 1×1
 correspond to the leaf nodes of the tree.

 //image

 The Frontman hates the widespread misconception, such that the quadtree can perform range queries in O(logn)
 time when there are n
 leaf nodes inside the region. In fact, sometimes it is necessary to query much more than O(logn)
 regions for this, and the time complexity is O(n)
 in some extreme cases. Thus, the Frontman came up with this task to educate you about this worst case of the data structure.

The pink soldiers have given you a finite region [l1,r1]×[l2,r2]
, where li
 and ri
 (li<ri
) are nonnegative integers. Please find the minimum number of nodes that you must choose in order to make the union of regions accounted for by the chosen nodes exactly the same as the given region. Here, two sets of points are considered different if there exists a point included in one but not in the other.


Input
Each test contains multiple test cases. The first line contains the number of test cases t
 (1≤t≤10^4
). The description of the test cases follows.

The only line of each test case contains four integers l1
, r1
, l2
, r2
 — the boundaries of the region in each axis (0≤li<ri≤10^6
).

Output
For each test case, output the minimum number of nodes necessary to satisfy the condition on a separate line.