An element bi
 (1≤i≤m
) in an array b1,b2,…,bm
 is a local minimum if at least one of the following holds:

2≤i≤m−1
 and bi<bi−1
 and bi<bi+1
, or
i=1
 and b1<b2
, or
i=m
 and bm<bm−1
.
Similarly, an element bi
 (1≤i≤m
) in an array b1,b2,…,bm
 is a local maximum if at least one of the following holds:

2≤i≤m−1
 and bi>bi−1
 and bi>bi+1
, or
i=1
 and b1>b2
, or
i=m
 and bm>bm−1
.
Note that local minima and maxima are not defined for arrays with only one element.

There is a hidden permutation∗
 p
 of length n
. The following two operations are applied to permutation p
 alternately, starting from operation 1, until there is only one element left in p
:

Operation 1 — remove all elements of p
 which are not local minima.
Operation 2 — remove all elements of p
 which are not local maxima.
More specifically, operation 1 is applied during every odd iteration, and operation 2 is applied during every even iteration, until there is only one element left in p
.

For each index i
 (1≤i≤n
), let ai
 be the iteration number that element pi
 is removed, or −1
 if it was never removed.

It can be proven that there will be only one element left in p
 after at most ⌈log2n⌉
 iterations (in other words, ai≤⌈log2n⌉
).

You are given the array a1,a2,…,an
. Your task is to construct any permutation p
 of n
 elements that satisfies array a
.

∗
A permutation of length n
 is an array consisting of n
 distinct integers from 1
 to n
 in arbitrary order. For example, [2,3,1,5,4]
 is a permutation, but [1,2,2]
 is not a permutation (2
 appears twice in the array), and [1,3,4]
 is also not a permutation (n=3
 but there is 4
 in the array).

Input

The first line of each test case contains a single integer n
 (2≤n≤2⋅10^5
) — the number of elements in permutation p
.

The second line of each test case contains n
 integers a1,a2,…,an
 (1≤ai≤⌈log2n⌉
 or ai=−1
) — the iteration number that element pi
 is removed.

It is guaranteed that the sum of n
 over all test cases does not exceed 2⋅10^5
.

It is guaranteed that there exists at least one permutation p
 that satisfies array a
.

Output
For each test case, output n
 integers representing the elements of the permutation satisfying array a
.

If there are multiple solutions, you may output any of them.